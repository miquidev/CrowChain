"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_thirdweb_dist_esm_wallets_wallet-connect_receiver_session-req-2d98ba"],{

/***/ "(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/session-request.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/session-request.js ***!
  \*******************************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fulfillRequest: function() { return /* binding */ fulfillRequest; }\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/utils.js\");\n\n/**\n * @internal\n */ async function fulfillRequest(options) {\n    const { wallet, walletConnectClient, thirdwebClient, event: { topic, id, params: { chainId: rawChainId, request } }, handlers } = options;\n    const account = wallet.getAccount();\n    if (!account) {\n        throw new Error(\"No account connected to provided wallet\");\n    }\n    let result;\n    try {\n        switch(request.method){\n            case \"personal_sign\":\n                {\n                    if (handlers === null || handlers === void 0 ? void 0 : handlers.personal_sign) {\n                        result = await handlers.personal_sign({\n                            account,\n                            params: request.params\n                        });\n                    } else {\n                        const { handleSignRequest } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./request-handlers/sign.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/request-handlers/sign.js\"));\n                        result = await handleSignRequest({\n                            account,\n                            params: request.params\n                        });\n                    }\n                    break;\n                }\n            case \"eth_sign\":\n                {\n                    if (handlers === null || handlers === void 0 ? void 0 : handlers.eth_sign) {\n                        result = await handlers.eth_sign({\n                            account,\n                            params: request.params\n                        });\n                    } else {\n                        const { handleSignRequest } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./request-handlers/sign.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/request-handlers/sign.js\"));\n                        result = await handleSignRequest({\n                            account,\n                            params: request.params\n                        });\n                    }\n                    break;\n                }\n            case \"eth_signTypedData\":\n                {\n                    if (handlers === null || handlers === void 0 ? void 0 : handlers.eth_signTypedData) {\n                        result = await handlers.eth_signTypedData({\n                            account,\n                            params: request.params\n                        });\n                    } else {\n                        const { handleSignTypedDataRequest } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./request-handlers/sign-typed-data.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/request-handlers/sign-typed-data.js\"));\n                        result = await handleSignTypedDataRequest({\n                            account,\n                            params: request.params\n                        });\n                    }\n                    break;\n                }\n            case \"eth_signTypedData_v4\":\n                {\n                    if (handlers === null || handlers === void 0 ? void 0 : handlers.eth_signTypedData_v4) {\n                        result = await handlers.eth_signTypedData_v4({\n                            account,\n                            params: request.params\n                        });\n                    } else {\n                        const { handleSignTypedDataRequest } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./request-handlers/sign-typed-data.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/request-handlers/sign-typed-data.js\"));\n                        result = await handleSignTypedDataRequest({\n                            account,\n                            params: request.params\n                        });\n                    }\n                    break;\n                }\n            case \"eth_signTransaction\":\n                {\n                    if (handlers === null || handlers === void 0 ? void 0 : handlers.eth_signTransaction) {\n                        result = await handlers.eth_signTransaction({\n                            account,\n                            params: request.params\n                        });\n                    } else {\n                        const { handleSignTransactionRequest } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./request-handlers/sign-transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/request-handlers/sign-transaction.js\"));\n                        result = await handleSignTransactionRequest({\n                            account,\n                            params: request.params\n                        });\n                    }\n                    break;\n                }\n            case \"eth_sendTransaction\":\n                {\n                    const chainId = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseEip155ChainId)(rawChainId);\n                    if (handlers === null || handlers === void 0 ? void 0 : handlers.eth_sendTransaction) {\n                        result = await handlers.eth_sendTransaction({\n                            account,\n                            chainId,\n                            params: request.params\n                        });\n                    } else {\n                        const { handleSendTransactionRequest } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./request-handlers/send-transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/request-handlers/send-transaction.js\"));\n                        result = await handleSendTransactionRequest({\n                            account,\n                            chainId,\n                            thirdwebClient,\n                            params: request.params\n                        });\n                    }\n                    break;\n                }\n            case \"eth_sendRawTransaction\":\n                {\n                    const chainId = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseEip155ChainId)(rawChainId);\n                    if (handlers === null || handlers === void 0 ? void 0 : handlers.eth_sendRawTransaction) {\n                        result = await handlers.eth_sendRawTransaction({\n                            account,\n                            chainId,\n                            params: request.params\n                        });\n                    } else {\n                        const { handleSendRawTransactionRequest } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./request-handlers/send-raw-transaction.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/request-handlers/send-raw-transaction.js\"));\n                        result = await handleSendRawTransactionRequest({\n                            account,\n                            chainId,\n                            params: request.params\n                        });\n                    }\n                    break;\n                }\n            case \"wallet_addEthereumChain\":\n                {\n                    if (handlers === null || handlers === void 0 ? void 0 : handlers.wallet_addEthereumChain) {\n                        result = await handlers.wallet_addEthereumChain({\n                            wallet,\n                            params: request.params\n                        });\n                    } else {\n                        throw new Error(\"Unsupported request method: wallet_addEthereumChain\");\n                    }\n                    break;\n                }\n            case \"wallet_switchEthereumChain\":\n                {\n                    if (handlers === null || handlers === void 0 ? void 0 : handlers.wallet_switchEthereumChain) {\n                        result = await handlers.wallet_switchEthereumChain({\n                            wallet,\n                            params: request.params\n                        });\n                    } else {\n                        const { handleSwitchChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./request-handlers/switch-chain.js */ \"(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/request-handlers/switch-chain.js\"));\n                        result = await handleSwitchChain({\n                            wallet,\n                            params: request.params\n                        });\n                    }\n                    break;\n                }\n            default:\n                {\n                    const potentialHandler = handlers === null || handlers === void 0 ? void 0 : handlers[request.method];\n                    if (potentialHandler) {\n                        result = await potentialHandler({\n                            account,\n                            chainId: (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.parseEip155ChainId)(rawChainId),\n                            params: request.params\n                        });\n                    } else {\n                        throw new Error(\"Unsupported request method: \".concat(request.method));\n                    }\n                }\n        }\n    } catch (error) {\n        result = {\n            code: typeof error === \"object\" && error !== null && \"code\" in error ? error.code : 500,\n            message: typeof error === \"object\" && error !== null && \"message\" in error ? error.message : \"Unknown error\"\n        };\n    }\n    walletConnectClient.respond({\n        topic,\n        response: {\n            id,\n            jsonrpc: \"2.0\",\n            result\n        }\n    });\n} //# sourceMappingURL=session-request.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/thirdweb/dist/esm/wallets/wallet-connect/receiver/session-request.js\n"));

/***/ })

}]);